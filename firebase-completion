# vim: ft=sh 
# 
#     _____           __                  
#    / __(_)_______  / /_  ____ _________ 
#   / /_/ / ___/ _ \/ __ \/ __ `/ ___/ _ \
#  / __/ / /  /  __/ /_/ / /_/ (__  )  __/
# /_/ /_/_/   \___/_.___/\__,_/____/\___/ 
#                                         
#
_firebase() {
  local cur prev opts base breaks  
  _get_comp_words_by_ref -n : cur

  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"

	commands="deploy init open list delete-site login logout -h -v data:get data:set data:push data:remove data:update deploy:hosting deploy:rules disable:hosting login:ci prefs:token serve help"

	case "${prev}" in
    init )
      args="-h --firebase --public -f -p " 
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

    deploy )
      args="--help -m --message -f --firebase"
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

    delete-site ) 
      args="--help -h --firebase -f --message -m" 
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

    login )
      args="--help --email --password" 
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

    logout )
      args="--help -h -d " 
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;
    
    -f|--firebase)
      args=$(firebase list|awk '{if(NR>2) {print $2}}'|grep -v '^$')
      COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
      return 0
      ;;

	esac
  
  COMPREPLY=($(compgen -W "${commands}" -- "${cur}"))
  __ltrim_colon_completions "$cur"
  return 0
}

complete -F _firebase firebase

